a <- hola(net)
library(FroogNeuralNetwork)
net <- getFeedforward()
addLayer(net, 3, 1, "purelim")
a <- hola(net)
a
net$summary()
net$toString()
net$addLayer(net, 3,1,"purelim")
net$addLayer(3,1,"purelim")
library(FroogNeuralNetwork)
net <- getFeedforward()
addLayer(net, 3, 1, "purelim")
net$summary()
library(FroogNeuralNetwork)
net <- getFeedforward()
addLayer(net, 3, 1, "purelim")
net$summary()
addLayer(net, 3, 1, "purelim")
net$summary()
net$addLayer(3,4,"tansig")
net$hola()
library(FroogNeuralNetwork)
net <- getFeedforward()
addLayer(net, 2, 2, "tansig")
addLayer(net, 2, 1, "purelim")
in <- matrix(data = c(1,2,3,4),nrow = 2)
in <- matrix(data = c(1,2,3,4),nrow = 2,ncol = 2,byrow = TRUE)
in<-matrix(data = c(1,2,3,4),nrow = 2,ncol = 2,byrow = TRUE)
a<-matrix(data = c(1,2,3,4),nrow = 2,ncol = 2,byrow = TRUE)
input<-matrix(data = c(1,2,3,4),nrow = 2,ncol = 2,byrow = TRUE)
output<-matrix(data = c(1,2),nrow = 1,ncol = 2,byrow = TRUE)
input
output
bp(net, input,output)
out(net,input)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
bp(net, input,output)
out(net,input)
library(FroogNeuralNetwork)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 2, "tansig")
addLayer(model, 2, 2, "tansig")
m <- matrix(data = c(1,2,3,4), nrow = 2, ncol = 2,byrow = TRUE)
out(model,m)
library(FroogNeuralNetwork)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 2, "tansig")
addLayer(model, 2, 2, "tansig")
m <- matrix(data = c(1,2,3,4), nrow = 2, ncol = 2,byrow = TRUE)
out(model,m)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 2, "tansig")
addLayer(model, 2, 2, "tansig")
m <- matrix(data = c(1,2,3,4), nrow = 2, ncol = 2,byrow = TRUE)
out(model,m)
a<-out(model, m)
a
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 2, "tansig")
addLayer(model, 2, 2, "tansig")
m <- matrix(data = c(1,2,3,4), nrow = 2, ncol = 2,byrow = TRUE)
out(model,m)
m
m <- matrix(data = c(1,2,3,4,5,6), nrow = 2, ncol = 3,byrow = TRUE)
m
out(model,m)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 2, "tansig")
addLayer(model, 2, 2, "tansig")
m <- matrix(data = c(1,2,3,4,5,6), nrow = 2, ncol = 3,byrow = TRUE)
out(model,m)
m
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 2, "tansig")
addLayer(model, 2, 2, "tansig")
m <- matrix(data = c(1,2,3,4,5,6), nrow = 2, ncol = 3,byrow = TRUE)
out(model,m)
y <- matrix(data = c(2,4,6,8,10,12), nrow = 2, ncol = 3, byrow = TRUE)
y
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y)
out(model,m)
model2 <- getFeedforward()
addLayer(model2, 2, 2, "tansig")
addLayer(model2, 2, 2, "purelim")
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
out(model2, m)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
out(model2, m)
model2 <- getFeedforward()
addLayer(model2, 2, 4, "tansig")
addLayer(model2, 4, 2, "purelim")
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
out(model2, m)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
out(model2, m)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
bp(net = model2, input = m, output = y)
out(model2, m)
library(FroogNeuralNetwork)
model2 <- getFeedforward()
addLayer(model2, 2, 4, "tansig")
addLayer(model2, 4, 2, "purelim")
x <- matrix(data = c(1,2,3,4,5,6), nrow = 2, ncol = 3,byrow = TRUE)
y <- matrix(data = c(2,4,6,8,10,12), nrow = 2, ncol = 3, byrow = TRUE)
bp(net = model2, input = m, output = y)
library(FroogNeuralNetwork)
model2 <- getFeedforward()
addLayer(model2, 2, 4, "tansig")
addLayer(model2, 4, 2, "purelim")
bp(net = model2, input = m, output = y, epochs = 100,acceleration = "adam",acc_param = 0.9)
bp(net = model2, input = m, output = y, epochs = 100,acceleration = "momentum_rumelhart",acc_param = 0.9)
out(model2, x)
bp(net = model2, input = m, output = y, epochs = 100)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y, epochs = 100,acceleration = "momentum_rumelhart",acc_param = 0.9)
bp(net = model, input = m, output = y, epochs = 100,acceleration = "momentum_rumelhart",acc_param = 0.9)
bp(net = model, input = m, output = y, epochs = 100,acceleration = "momentum_rumelhart",acc_param = 0.9)
out(model, x)
a<-""
a
library(FroogNeuralNetwork)
is.na(ep)
ep <- NULL
is.na(ep)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y, epochs = 100, acceleration = "momentum_rumelhart", acc_param = 0.9)
bp(net = model, input = m, output = y, epochs = 100, acceleration = "momentum_rumelhart")
library(FroogNeuralNetwork)
bp(net = model, input = m, output = y, epochs = 100, acceleration = "momentum_rumelhart")
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y, epochs = 100, acceleration = "momentum_rumelhart")
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4, 2, "purelim")
bp(net = model, input = m, output = y)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
bp(net = model, input = m, output = y,epochs = 100,acceleration = "momentum",acc_param = 0.9)
library(FroogNeuralNetwork)
red <- getFeedforward()
addLayer(red, 2, 4, "tansig")
addLayer(red, 4, 2, "purelim")
x <- matrix(data = c(1,2,3,4,5,6),nrow = 2,ncol = 3, byrow = TRUE)
x
y <- matrix(data = c(2,4,6,8,10,12), nrow = 2, ncol = 3, byrow = TRUE)
y
bp(net = red, input = x)
bp(net = red, input = x, output = y,epochs = 100,acceleration = "momentum_rumelhart",acc_param = 0.9)
out(red, x)
bp(net = red, input = x, output = y,epochs = 100,acceleration = "momentum_rumelhart",acc_param = 0.9)
out(red, x)
red <- getFeedforward()
addLayer(red, 2, 4, "tansig")
addLayer(red, 4, 2, "purelim")
x <- matrix(data = c(1,2,3,4,5,6),nrow = 2,ncol = 3, byrow = TRUE)
x
y <- matrix(data = c(2,4,6,8,10,12), nrow = 2, ncol = 3, byrow = TRUE)
y
bp(red, x, y, 100, "momentum_rumelhart", 0.9)
bp(red, x, y, 100, "momentum_rumelhart", 0.9)
out(red, x)
red <- getFeedforward()
addLayer(red, 2, 4, "tansig")
addLayer(red, 4, 2, "purelim")
bp(red, x, y, 100, "momentum_rumelhart", 0.9)
bp(red, x, y, 100, "momentum_rumelhart", 0.9)
out(red, x)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2,4,"tansig")
addLayer(model, 4,2,"purelim")
bp(model, x,y)
bp(model, x,y,acceleration = "momentum")
bp(model, x,y,acceleration = "momentum_rumelhart")
a <- out(model, x)
a
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4,2, "purelim")
sgd(model, x, y, epochs = 10, batch_size = 1)
sgd(model, x, y, epochs = 10, batch_size = 1, acceleration = "momentum_rumelhart", acc_param = 0.9)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4,2, "purelim")
sgd(model, x, y, epochs = 10, batch_size = 1, acceleration = "momentum_rumelhart", acc_param = 0.9)
sgd(model, x, y, epochs = 10, batch_size = 1, acceleration = "momentum_rumelhart", acc_param = 0.9)
sgd(model, x, y, epochs = 10, batch_size = 1, acceleration = "momentum_rumelhart", acc_param = 0.9)
out(model, x)
out(model, x)
out(model, x)
out(model, x)
sgd(model, x, y, epochs = 10, batch_size = 1, acceleration = "momentum_rumelhart", acc_param = 0.9)
out(model, x)
out(model, x)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4,2, "purelim")
sgd(model, x, y, epochs = 10, batch_size = 1, acceleration = "momentum_rumelhart", acc_param = 0.9)
sgd(model, x, y, epochs = 100, batch_size = 2, acceleration = "momentum_rumelhart", acc_param = 0.9)
sgd(model, x, y, epochs = 100, batch_size = 2, acceleration = "momentum_rumelhart", acc_param = 0.9)
sgd(model, x, y, epochs = 100, batch_size = 3, acceleration = "momentum_rumelhart", acc_param = 0.9)
sgd(model, x, y, epochs = 100, batch_size = 0, acceleration = "momentum_rumelhart", acc_param = 0.9)
out(model, x)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4,2, "purelim")
sgd(model, x, y, epochs = 100, batch_size = 0, acceleration = "momentum_rumelhart", acc_param = 0.9)
sgd(model, x, y, epochs = 100, batch_size = 0, acceleration = "momentum_rumelhart", acc_param = 0.9)
out(model, x)
library(FroogNeuralNetwork)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4,2, "purelim")
cg(model, x, y)
out(model, x)
scg(model, x, y)
out(model, x)
model <- getFeedforward()
addLayer(model, 2, 4, "tansig")
addLayer(model, 4,2, "purelim")
scg(model, x, y)
out(model, x)
scg(model, x, y)
out(model, x)
cg(model, x, y)
out(model, x)
cg(model, x, y)
out(model, x)
